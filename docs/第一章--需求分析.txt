
各位慕课网的小伙伴，大家好，我是你们的主讲老师浪晋，很高兴能够带着大家一起学习。
通过导学的内容，我们已经了解了这门课程是做什么的，大家可以学到什么知识。
下面就正式给大家开始讲解，如何从0开始编写一个接口自动化测试平台。
我们的课程是测试开发，是以测试的思路为主，通过开发的技术为辅，去实现一个可以让小白测试用户也可以做接口自动化测试的一个工具。
那么首先，我们就应该先分析一下，我们要做的这个东西，应该有哪些功能，应该采用什么样子的技术。
所以，第一步，我们需要做的事情就是需求分析，知道了具体应该做些什么，我们才能够去设计后面内容。

需求分析，一般我们会从以下三个方面去着手。
分别是对系统功能分析，从我们实际应用的业务下去分析，我们即将开发的这个工具应该包含哪些功能，需要覆盖哪些业务场景。
技术分析就是梳理下我们目前已经掌握的技能，用哪些技术可以快速，稳定的实现我们的功能需求的内容。付出的成本才最小。
最后是系统分析，在技术分析的技术上，选择合适的框架。以及考虑未来做好了后的一个部署方案。
我们来挨着看一下，具体的应该怎么做。
首先是功能需求的分析
我们在做接口测试的时候，很多时候不会只有一个项目，比如慕课网，就会分WEB端、APP端，以及管理后台。
我们需要分别对这三个项目进行测试，我们的接口不可能乱七八糟的混杂到一起，所以需要以项目来区分。
而且每个项目下面，还会有不同的模块，我在项目下面还需要增加一个模块管理的功能，最终的接口会挂到每一个功能模块下面去。
这样子我就就可以以功能模块为单位，或者直接以项目为单位来一键执行测试用例了。
一般这种管理功能，都会具备增删查改的功能。
所以，我们需要的第一个功能需求是，需要一个项目/模块的管理功能。
有了项目和模块，那就应该是把接口测试用例写到对于的项目和模块下面了。
所以需要一个功能模块来管理测试用例，实现对用例的增删查改，对于这一部分我觉得大家都应该是清楚的。
用例既然有了，那我们肯定是需要能够执行用例的，而且也要对用例进行调试，所以应该对每一个用例实现一个运行用例的功能，并且能够看到用例返回的状态。
关于用例运行的方式，目前我们就已经有了单个用例的运行，按功能模块运行，按项目运行三种了，考虑到很多用例之间是互相关联的，可能会存在上下数据交互的情况。
所以我们还需要一个可以选择用例，排序运行的功能。
好了，用了运行的功能我们也考虑到了，执行了测试，接下来肯定就是测试报告了/
我们可以参考自动化测试中的HTMLTESTreport生成的测试报告的形式。
展示测试的运行结果的统计图，以及具体的用例执行的结果列表。
可以方便我们直观的看到运行的结果和每一条用例的执行情况，并且可以点开，查看详细的返回的结果。哪里没通过，哪里出了异常。


那么我们的项目的核心的功能就基本上完成了。
不过，考虑到每一条用例都是手动输入的，太麻烦了，而且万一我们已经用POSTMAN做过了接口测试，我们是不是可以复用POSTMAN的接口的数据呢，
将postman的数据直接导入我们的系统，直接使用。
如果是这样子的话，那么我们还需要做一个导入用例的功能。
如果没有postman的数据呢？那怎么能快速的输入用里呢。
大家都应该有过抓包的经验，我们是不是可以通过抓包工具，直接获取到接口数据，再将数据导入到我们的系统呢。
如果完成了这么一个功能，相当于我们就完成了一个类似录制的功能了，想一想，还是多么方便的。
那我们把这个功能也纳入到我们的需求里面去。

完成了这些功能，我们的系统基本上就可以运行起来了。
不过在实际的工作里，我们是有团队的，所以我们还要考虑到多用户操作的情况，所以还需要引进用户管理，做一个登陆功能。
不同的用户用自己的账号登陆，可以区分开用例都是谁写的，谁执行的。

好啦，基本需要的功能我们都考虑到了，大家可能还会有一些其他的需求，相信大家在学了以上的功能怎么开发后，都可以自己去实现自己想要的功能。
功能分析结束后，接下来是技术分析。
要想成本最小的进行开发，我们必然只能选择我们最擅长的开发方式了。
我们需要考虑我们掌握的技能能不能实现我们要开发的工具，如果某个技能不会，我们也应该选一个我们能快速掌握的技术。
而且要尽量的选择成熟的技术，这样出了问题，就能够去技术社区上寻找到答案。
大家应该都接触过自动化测试，目前流程的做自动化测试的语言是Java和python。
我们在这里选择使用python，因为python写起来比Java要高效一些，而且代码更容易阅读，没有基础也不用担心，学习python也很快。

对应的数据库，我们选择mysql，因为mysql是免费的，而且大家应该都是有接触过的，学习成本比较低，用起来也更轻松。
相对于选一个陌生的数据库，mysql就更加的有了优势。
毕竟我们这个项目也就项目团队的同事一起用，对性能的要求也不高，只需要考虑功能就行了。

我们采用前后端分离的方式来进行开发，前端就纯粹的用HTML来实现，方便修改和维护，后端就只写功能，通过接口直接对接数据，就可以达到我们的要求了。
在python开发中，有两个出名的WEB开发框架，django和flask，我们选择flask来实现，两个框架都十分的优秀，但对于业务简单的项目来说，flask更加的小巧，灵活。

分析完我们采用的技术后，我们要去考虑具体的系统实现方案。
项目的模式、和项目结构的搭建。
实现方案我们可以用经典的MVC模式，通过用户前端操作WEB，将数据和请求发送给我们的服务，服务接收到了后，对数据库进行增删查改。
数据库再将结果返回给我们的服务，最后，服务再将结果展示给用户。
大家注意到了，这里我写了一个json。
因为我们需要对输入的用例进行解析，python对json的支持很好，我们可以直接的对json进行操作，转换为字典。
我们的程序便可以直接操作字典了。
所以，我们选择用json格式来储存测试用例。
对于测试用例的功能来讲，我们会先通过服务去操作json，再将json格式的数据放到数据库中。
